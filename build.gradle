
repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.3.12")
        classpath "net.serenity-bdd:serenity-single-page-report:2.3.12"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '2.3.12'
    junitVersion = '4.13'
    assertJVersion = '3.8.0'
    logbackVersion = '1.2.3'
    jsonSchemaValidatorVersion = '3.0.7'
    jsonPath = '4.3.2'
    lombokVersion = '1.18.16'
    javaFakerVersion = '1.0.2'
    poi = '4.1.2'
    poiOmlx = '4.1.0'

}

dependencies {
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}",
            "junit:junit:${junitVersion}",
            "org.assertj:assertj-core:${assertJVersion}",
            "io.rest-assured:json-schema-validator:${jsonSchemaValidatorVersion}",
            "io.rest-assured:json-path:${jsonPath}",
            "com.github.javafaker:javafaker:${javaFakerVersion}",
            "org.apache.poi:poi:${poi}",
            "org.apache.poi:poi-ooxml:${poiOmlx}"

    annotationProcessor "org.projectlombok:lombok"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

task regression(type: Test) {
    testLogging.showStandardStreams = true
    maxParallelForks = 1
    systemProperties System.getProperties()
    systemProperty("tags", "")
}

serenity {
    reports = ["single-page-html"]
}

repositories {
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)